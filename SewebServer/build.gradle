buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.0.RC5")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'cargo'
apply plugin: 'war'

jar {
    baseName = 'SewebServer'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

// adding cargo
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies { classpath "org.gradle.api.plugins:gradle-cargo-plugin:0.6.1"  }
}

configurations {
	tomcatAnt
}

cargo {
    containerId = 'tomcat7x'
    port = 8080
    remote {
        hostname = '188.226.173.230'
        username = 'xxxxyyyy'
        password = 'xxxxyyyy'
    }
}

dependencies {
	compile("joda-time:joda-time:2.0")
	compile("com.javadocmd:simplelatlng:1.3.0")
	compile("org.json:json:20140107")
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework:spring-jdbc")
    providedCompile("javax.servlet:javax.servlet-api:3.0.1")
    compile("com.h2database:h2")
    compile("org.postgresql:postgresql:9.3-1101-jdbc4")
    compile("org.apache.logging.log4j:log4j-core:2.0-rc1")
    compile("org.apache.logging.log4j:log4j-api:2.0-rc1")
    testCompile("junit:junit")
    cargo("org.codehaus.cargo:cargo-core-uberjar:1.4.7",
          "org.codehaus.cargo:cargo-ant:1.4.5",
          "jaxen:jaxen:1.1.1")
    tomcatAnt("org.apache.tomcat:tomcat-catalina-ant:7.0.39")
}   
 
 ext.appContextStatus = {
	String serverUrl = "http://188.226.173.230:8080/manager/text"
	ant.taskdef(name: 'list', classname: 'org.apache.catalina.ant.ListTask', classpath: configurations.tomcatAnt.asPath)

	try {	
		ant.list(url: serverUrl, username: 'xxxxyyyy', password: 'xxxxyyyy', outputproperty: 'appContextStatus')
		String appContextStatus = ant.properties.appContextStatus
		return appContextStatus.contains("SewebServer:running") || appContextStatus.contains("SewebServer:stopped")
	}
	catch(Exception e) {
		logger.error "Failed to connect to '$serverUrl': $e.message"
		return false
	}
}

cargoUndeployRemote {
	onlyIf appContextStatus
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}